// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.1
// source: rpc/idl/shardkv.proto

package shardkvsvc

import (
	"reflect"
	"sync"
	
	"google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Put or Append
type PutAppendArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value      string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	Op         string `protobuf:"bytes,3,opt,name=Op,proto3" json:"Op,omitempty"`
	ClientId   int64  `protobuf:"varint,4,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	SequenceId int64  `protobuf:"varint,5,opt,name=SequenceId,proto3" json:"SequenceId,omitempty"`
}

func (x *PutAppendArgs) Reset() {
	*x = PutAppendArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_idl_shardkv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAppendArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAppendArgs) ProtoMessage() {}

func (x *PutAppendArgs) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_idl_shardkv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAppendArgs.ProtoReflect.Descriptor instead.
func (*PutAppendArgs) Descriptor() ([]byte, []int) {
	return file_rpc_idl_shardkv_proto_rawDescGZIP(), []int{0}
}

func (x *PutAppendArgs) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PutAppendArgs) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PutAppendArgs) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

func (x *PutAppendArgs) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *PutAppendArgs) GetSequenceId() int64 {
	if x != nil {
		return x.SequenceId
	}
	return 0
}

type PutAppendReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err string `protobuf:"bytes,1,opt,name=Err,proto3" json:"Err,omitempty"`
}

func (x *PutAppendReply) Reset() {
	*x = PutAppendReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_idl_shardkv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAppendReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAppendReply) ProtoMessage() {}

func (x *PutAppendReply) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_idl_shardkv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAppendReply.ProtoReflect.Descriptor instead.
func (*PutAppendReply) Descriptor() ([]byte, []int) {
	return file_rpc_idl_shardkv_proto_rawDescGZIP(), []int{1}
}

func (x *PutAppendReply) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type GetArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	ClientId   int64  `protobuf:"varint,2,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	SequenceId int64  `protobuf:"varint,3,opt,name=SequenceId,proto3" json:"SequenceId,omitempty"`
}

func (x *GetArgs) Reset() {
	*x = GetArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_idl_shardkv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArgs) ProtoMessage() {}

func (x *GetArgs) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_idl_shardkv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArgs.ProtoReflect.Descriptor instead.
func (*GetArgs) Descriptor() ([]byte, []int) {
	return file_rpc_idl_shardkv_proto_rawDescGZIP(), []int{2}
}

func (x *GetArgs) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetArgs) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *GetArgs) GetSequenceId() int64 {
	if x != nil {
		return x.SequenceId
	}
	return 0
}

type GetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err   string `protobuf:"bytes,1,opt,name=Err,proto3" json:"Err,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *GetReply) Reset() {
	*x = GetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_idl_shardkv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReply) ProtoMessage() {}

func (x *GetReply) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_idl_shardkv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReply.ProtoReflect.Descriptor instead.
func (*GetReply) Descriptor() ([]byte, []int) {
	return file_rpc_idl_shardkv_proto_rawDescGZIP(), []int{3}
}

func (x *GetReply) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetReply) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SendShardArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duptable map[int64]int64 `protobuf:"bytes,1,rep,name=Duptable,proto3" json:"Duptable,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	ShardId  int64  `protobuf:"varint,2,opt,name=ShardId,proto3" json:"ShardId,omitempty"`
	Shard    *Shard `protobuf:"bytes,3,opt,name=Shard,proto3" json:"Shard,omitempty"`
	ClientId int64  `protobuf:"varint,4,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	CfgNum   int64           `protobuf:"varint,5,opt,name=CfgNum,proto3" json:"CfgNum,omitempty"`
}

func (x *SendShardArg) Reset() {
	*x = SendShardArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_idl_shardkv_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendShardArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendShardArg) ProtoMessage() {}

func (x *SendShardArg) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_idl_shardkv_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendShardArg.ProtoReflect.Descriptor instead.
func (*SendShardArg) Descriptor() ([]byte, []int) {
	return file_rpc_idl_shardkv_proto_rawDescGZIP(), []int{4}
}

func (x *SendShardArg) GetDuptable() map[int64]int64 {
	if x != nil {
		return x.Duptable
	}
	return nil
}

func (x *SendShardArg) GetShardId() int64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *SendShardArg) GetShard() *Shard {
	if x != nil {
		return x.Shard
	}
	return nil
}

func (x *SendShardArg) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *SendShardArg) GetCfgNum() int64 {
	if x != nil {
		return x.CfgNum
	}
	return 0
}

type SendShardReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err string `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *SendShardReply) Reset() {
	*x = SendShardReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_idl_shardkv_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendShardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendShardReply) ProtoMessage() {}

func (x *SendShardReply) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_idl_shardkv_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendShardReply.ProtoReflect.Descriptor instead.
func (*SendShardReply) Descriptor() ([]byte, []int) {
	return file_rpc_idl_shardkv_proto_rawDescGZIP(), []int{5}
}

func (x *SendShardReply) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type Shard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      map[string]string `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ConfigNum int64             `protobuf:"varint,2,opt,name=ConfigNum,proto3" json:"ConfigNum,omitempty"`
}

func (x *Shard) Reset() {
	*x = Shard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_idl_shardkv_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shard) ProtoMessage() {}

func (x *Shard) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_idl_shardkv_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shard.ProtoReflect.Descriptor instead.
func (*Shard) Descriptor() ([]byte, []int) {
	return file_rpc_idl_shardkv_proto_rawDescGZIP(), []int{6}
}

func (x *Shard) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Shard) GetConfigNum() int64 {
	if x != nil {
		return x.ConfigNum
	}
	return 0
}

var File_rpc_idl_shardkv_proto protoreflect.FileDescriptor

var file_rpc_idl_shardkv_proto_rawDesc = []byte{
	0x0a, 0x15, 0x72, 0x70, 0x63, 0x2f, 0x69, 0x64, 0x6c, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6b,
	0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6b, 0x76,
	0x73, 0x76, 0x63, 0x22, 0x83, 0x01, 0x0a, 0x0d, 0x50, 0x75, 0x74, 0x41, 0x70, 0x70, 0x65, 0x6e,
	0x64, 0x41, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x4f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x4f, 0x70, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x22, 0x0a, 0x0e, 0x50, 0x75, 0x74,
	0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x45,
	0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x22, 0x57, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x41, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x45, 0x72, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x86, 0x02, 0x0a, 0x0c, 0x53,
	0x65, 0x6e, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x41, 0x72, 0x67, 0x12, 0x42, 0x0a, 0x08, 0x44,
	0x75, 0x70, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x6b, 0x76, 0x73, 0x76, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x41, 0x72, 0x67, 0x2e, 0x44, 0x75, 0x70, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x44, 0x75, 0x70, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x6b, 0x76, 0x73, 0x76, 0x63, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x05, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x43, 0x66, 0x67, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x43, 0x66, 0x67, 0x4e, 0x75, 0x6d, 0x1a, 0x3b, 0x0a, 0x0d, 0x44, 0x75, 0x70, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x22, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x8f, 0x01, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x12, 0x2f, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6b, 0x76, 0x73, 0x76, 0x63, 0x2e, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x75, 0x6d,
	0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xc7, 0x01, 0x0a, 0x07, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x4b, 0x56, 0x12, 0x32, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x13, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x6b, 0x76, 0x73, 0x76, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x67,
	0x73, 0x1a, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6b, 0x76, 0x73, 0x76, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x50, 0x75, 0x74,
	0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x19, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6b, 0x76,
	0x73, 0x76, 0x63, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x41, 0x72, 0x67,
	0x73, 0x1a, 0x1a, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6b, 0x76, 0x73, 0x76, 0x63, 0x2e, 0x50,
	0x75, 0x74, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x42, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12, 0x18, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x6b, 0x76, 0x73, 0x76, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x41, 0x72, 0x67, 0x1a, 0x1a, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6b, 0x76, 0x73,
	0x76, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x3b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6b, 0x76,
	0x73, 0x76, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_idl_shardkv_proto_rawDescOnce sync.Once
	file_rpc_idl_shardkv_proto_rawDescData = file_rpc_idl_shardkv_proto_rawDesc
)

func file_rpc_idl_shardkv_proto_rawDescGZIP() []byte {
	file_rpc_idl_shardkv_proto_rawDescOnce.Do(func() {
		file_rpc_idl_shardkv_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_idl_shardkv_proto_rawDescData)
	})
	return file_rpc_idl_shardkv_proto_rawDescData
}

var file_rpc_idl_shardkv_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_rpc_idl_shardkv_proto_goTypes = []interface{}{
	(*PutAppendArgs)(nil),  // 0: shardkvsvc.PutAppendArgs
	(*PutAppendReply)(nil), // 1: shardkvsvc.PutAppendReply
	(*GetArgs)(nil),        // 2: shardkvsvc.GetArgs
	(*GetReply)(nil),       // 3: shardkvsvc.GetReply
	(*SendShardArg)(nil),   // 4: shardkvsvc.SendShardArg
	(*SendShardReply)(nil), // 5: shardkvsvc.SendShardReply
	(*Shard)(nil),          // 6: shardkvsvc.Shard
	nil,                    // 7: shardkvsvc.SendShardArg.DuptableEntry
	nil,                    // 8: shardkvsvc.Shard.DataEntry
}
var file_rpc_idl_shardkv_proto_depIdxs = []int32{
	7, // 0: shardkvsvc.SendShardArg.Duptable:type_name -> shardkvsvc.SendShardArg.DuptableEntry
	6, // 1: shardkvsvc.SendShardArg.Shard:type_name -> shardkvsvc.Shard
	8, // 2: shardkvsvc.Shard.Data:type_name -> shardkvsvc.Shard.DataEntry
	2, // 3: shardkvsvc.ShardKV.Get:input_type -> shardkvsvc.GetArgs
	0, // 4: shardkvsvc.ShardKV.PutAppend:input_type -> shardkvsvc.PutAppendArgs
	4, // 5: shardkvsvc.ShardKV.AddShard:input_type -> shardkvsvc.SendShardArg
	3, // 6: shardkvsvc.ShardKV.Get:output_type -> shardkvsvc.GetReply
	1, // 7: shardkvsvc.ShardKV.PutAppend:output_type -> shardkvsvc.PutAppendReply
	5, // 8: shardkvsvc.ShardKV.AddShard:output_type -> shardkvsvc.SendShardReply
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_rpc_idl_shardkv_proto_init() }
func file_rpc_idl_shardkv_proto_init() {
	if File_rpc_idl_shardkv_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_idl_shardkv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAppendArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_idl_shardkv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAppendReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_idl_shardkv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_idl_shardkv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_idl_shardkv_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendShardArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_idl_shardkv_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendShardReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_idl_shardkv_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_idl_shardkv_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_idl_shardkv_proto_goTypes,
		DependencyIndexes: file_rpc_idl_shardkv_proto_depIdxs,
		MessageInfos:      file_rpc_idl_shardkv_proto_msgTypes,
	}.Build()
	File_rpc_idl_shardkv_proto = out.File
	file_rpc_idl_shardkv_proto_rawDesc = nil
	file_rpc_idl_shardkv_proto_goTypes = nil
	file_rpc_idl_shardkv_proto_depIdxs = nil
}
