// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.1
// source: internal/idl/shardctlrer.proto

package shardctrlersvc

import (
	"reflect"
	"sync"
	
	"google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JoinArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servers    map[int64]*Servers `protobuf:"bytes,1,rep,name=Servers,proto3" json:"Servers,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClientId   int64              `protobuf:"varint,2,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	SequenceId int64              `protobuf:"varint,3,opt,name=SequenceId,proto3" json:"SequenceId,omitempty"`
}

func (x *JoinArgs) Reset() {
	*x = JoinArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_idl_shardctlrer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinArgs) ProtoMessage() {}

func (x *JoinArgs) ProtoReflect() protoreflect.Message {
	mi := &file_internal_idl_shardctlrer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinArgs.ProtoReflect.Descriptor instead.
func (*JoinArgs) Descriptor() ([]byte, []int) {
	return file_internal_idl_shardctlrer_proto_rawDescGZIP(), []int{0}
}

func (x *JoinArgs) GetServers() map[int64]*Servers {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *JoinArgs) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *JoinArgs) GetSequenceId() int64 {
	if x != nil {
		return x.SequenceId
	}
	return 0
}

type Servers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hosts []string `protobuf:"bytes,1,rep,name=Hosts,proto3" json:"Hosts,omitempty"`
}

func (x *Servers) Reset() {
	*x = Servers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_idl_shardctlrer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Servers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Servers) ProtoMessage() {}

func (x *Servers) ProtoReflect() protoreflect.Message {
	mi := &file_internal_idl_shardctlrer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Servers.ProtoReflect.Descriptor instead.
func (*Servers) Descriptor() ([]byte, []int) {
	return file_internal_idl_shardctlrer_proto_rawDescGZIP(), []int{1}
}

func (x *Servers) GetHosts() []string {
	if x != nil {
		return x.Hosts
	}
	return nil
}

type JoinReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WrongLeader bool   `protobuf:"varint,1,opt,name=WrongLeader,proto3" json:"WrongLeader,omitempty"`
	Err         string `protobuf:"bytes,2,opt,name=Err,proto3" json:"Err,omitempty"`
}

func (x *JoinReply) Reset() {
	*x = JoinReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_idl_shardctlrer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinReply) ProtoMessage() {}

func (x *JoinReply) ProtoReflect() protoreflect.Message {
	mi := &file_internal_idl_shardctlrer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinReply.ProtoReflect.Descriptor instead.
func (*JoinReply) Descriptor() ([]byte, []int) {
	return file_internal_idl_shardctlrer_proto_rawDescGZIP(), []int{2}
}

func (x *JoinReply) GetWrongLeader() bool {
	if x != nil {
		return x.WrongLeader
	}
	return false
}

func (x *JoinReply) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type LeaveArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GIDs       []int64 `protobuf:"varint,1,rep,packed,name=GIDs,proto3" json:"GIDs,omitempty"`
	ClientId   int64   `protobuf:"varint,2,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	SequenceId int64   `protobuf:"varint,3,opt,name=SequenceId,proto3" json:"SequenceId,omitempty"`
}

func (x *LeaveArgs) Reset() {
	*x = LeaveArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_idl_shardctlrer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveArgs) ProtoMessage() {}

func (x *LeaveArgs) ProtoReflect() protoreflect.Message {
	mi := &file_internal_idl_shardctlrer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveArgs.ProtoReflect.Descriptor instead.
func (*LeaveArgs) Descriptor() ([]byte, []int) {
	return file_internal_idl_shardctlrer_proto_rawDescGZIP(), []int{3}
}

func (x *LeaveArgs) GetGIDs() []int64 {
	if x != nil {
		return x.GIDs
	}
	return nil
}

func (x *LeaveArgs) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *LeaveArgs) GetSequenceId() int64 {
	if x != nil {
		return x.SequenceId
	}
	return 0
}

type LeaveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WrongLeader bool   `protobuf:"varint,1,opt,name=WrongLeader,proto3" json:"WrongLeader,omitempty"`
	Err         string `protobuf:"bytes,2,opt,name=Err,proto3" json:"Err,omitempty"`
}

func (x *LeaveReply) Reset() {
	*x = LeaveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_idl_shardctlrer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveReply) ProtoMessage() {}

func (x *LeaveReply) ProtoReflect() protoreflect.Message {
	mi := &file_internal_idl_shardctlrer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveReply.ProtoReflect.Descriptor instead.
func (*LeaveReply) Descriptor() ([]byte, []int) {
	return file_internal_idl_shardctlrer_proto_rawDescGZIP(), []int{4}
}

func (x *LeaveReply) GetWrongLeader() bool {
	if x != nil {
		return x.WrongLeader
	}
	return false
}

func (x *LeaveReply) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type MoveArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shard      int64 `protobuf:"varint,1,opt,name=Shard,proto3" json:"Shard,omitempty"`
	GID        int64 `protobuf:"varint,2,opt,name=GID,proto3" json:"GID,omitempty"`
	ClientId   int64 `protobuf:"varint,3,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	SequenceId int64 `protobuf:"varint,4,opt,name=SequenceId,proto3" json:"SequenceId,omitempty"`
}

func (x *MoveArgs) Reset() {
	*x = MoveArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_idl_shardctlrer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveArgs) ProtoMessage() {}

func (x *MoveArgs) ProtoReflect() protoreflect.Message {
	mi := &file_internal_idl_shardctlrer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveArgs.ProtoReflect.Descriptor instead.
func (*MoveArgs) Descriptor() ([]byte, []int) {
	return file_internal_idl_shardctlrer_proto_rawDescGZIP(), []int{5}
}

func (x *MoveArgs) GetShard() int64 {
	if x != nil {
		return x.Shard
	}
	return 0
}

func (x *MoveArgs) GetGID() int64 {
	if x != nil {
		return x.GID
	}
	return 0
}

func (x *MoveArgs) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *MoveArgs) GetSequenceId() int64 {
	if x != nil {
		return x.SequenceId
	}
	return 0
}

type MoveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WrongLeader bool   `protobuf:"varint,1,opt,name=WrongLeader,proto3" json:"WrongLeader,omitempty"`
	Err         string `protobuf:"bytes,2,opt,name=Err,proto3" json:"Err,omitempty"`
}

func (x *MoveReply) Reset() {
	*x = MoveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_idl_shardctlrer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveReply) ProtoMessage() {}

func (x *MoveReply) ProtoReflect() protoreflect.Message {
	mi := &file_internal_idl_shardctlrer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveReply.ProtoReflect.Descriptor instead.
func (*MoveReply) Descriptor() ([]byte, []int) {
	return file_internal_idl_shardctlrer_proto_rawDescGZIP(), []int{6}
}

func (x *MoveReply) GetWrongLeader() bool {
	if x != nil {
		return x.WrongLeader
	}
	return false
}

func (x *MoveReply) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type QueryArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num        int64 `protobuf:"varint,1,opt,name=Num,proto3" json:"Num,omitempty"`
	ClientId   int64 `protobuf:"varint,2,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	SequenceId int64 `protobuf:"varint,3,opt,name=SequenceId,proto3" json:"SequenceId,omitempty"`
}

func (x *QueryArgs) Reset() {
	*x = QueryArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_idl_shardctlrer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryArgs) ProtoMessage() {}

func (x *QueryArgs) ProtoReflect() protoreflect.Message {
	mi := &file_internal_idl_shardctlrer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryArgs.ProtoReflect.Descriptor instead.
func (*QueryArgs) Descriptor() ([]byte, []int) {
	return file_internal_idl_shardctlrer_proto_rawDescGZIP(), []int{7}
}

func (x *QueryArgs) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *QueryArgs) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *QueryArgs) GetSequenceId() int64 {
	if x != nil {
		return x.SequenceId
	}
	return 0
}

type QueryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WrongLeader bool    `protobuf:"varint,1,opt,name=WrongLeader,proto3" json:"WrongLeader,omitempty"`
	Err         string  `protobuf:"bytes,2,opt,name=Err,proto3" json:"Err,omitempty"`
	Config      *Config `protobuf:"bytes,3,opt,name=Config,proto3" json:"Config,omitempty"`
}

func (x *QueryReply) Reset() {
	*x = QueryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_idl_shardctlrer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryReply) ProtoMessage() {}

func (x *QueryReply) ProtoReflect() protoreflect.Message {
	mi := &file_internal_idl_shardctlrer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryReply.ProtoReflect.Descriptor instead.
func (*QueryReply) Descriptor() ([]byte, []int) {
	return file_internal_idl_shardctlrer_proto_rawDescGZIP(), []int{8}
}

func (x *QueryReply) GetWrongLeader() bool {
	if x != nil {
		return x.WrongLeader
	}
	return false
}

func (x *QueryReply) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *QueryReply) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

// A configuration -- an assignment of shards to groups.
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// config number
	Num int64 `protobuf:"varint,1,opt,name=Num,proto3" json:"Num,omitempty"`
	// shard -> gid 一个分片对应一个副本组，但是多个分片可以对应一个分组
	Shards []int64 `protobuf:"varint,2,rep,packed,name=Shards,proto3" json:"Shards,omitempty"`
	// gid -> servers[] 一个副本组内使用raft来保证集群内的强一致性
	Groups map[int64]*Servers `protobuf:"bytes,3,rep,name=Groups,proto3" json:"Groups,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_idl_shardctlrer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_internal_idl_shardctlrer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_internal_idl_shardctlrer_proto_rawDescGZIP(), []int{9}
}

func (x *Config) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *Config) GetShards() []int64 {
	if x != nil {
		return x.Shards
	}
	return nil
}

func (x *Config) GetGroups() map[int64]*Servers {
	if x != nil {
		return x.Groups
	}
	return nil
}

var File_internal_idl_shardctlrer_proto protoreflect.FileDescriptor

var file_internal_idl_shardctlrer_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x69, 0x64, 0x6c, 0x2f, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x63, 0x74, 0x6c, 0x72, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x63, 0x74, 0x72, 0x6c, 0x65, 0x72, 0x73, 0x76, 0x63,
	0x22, 0xdc, 0x01, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x12, 0x3f, 0x0a,
	0x07, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x63, 0x74, 0x72, 0x6c, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e,
	0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x1a, 0x53, 0x0a, 0x0c, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x63, 0x74, 0x72, 0x6c, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x1f, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x48, 0x6f,
	0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x48, 0x6f, 0x73, 0x74, 0x73,
	0x22, 0x3f, 0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x57, 0x72, 0x6f, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x57, 0x72, 0x6f, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72,
	0x72, 0x22, 0x5b, 0x0a, 0x09, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x47, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x47, 0x49,
	0x44, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x40,
	0x0a, 0x0a, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x57, 0x72, 0x6f, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x57, 0x72, 0x6f, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72,
	0x22, 0x6e, 0x0a, 0x08, 0x4d, 0x6f, 0x76, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x47, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x47, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x3f, 0x0a, 0x09, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x57, 0x72, 0x6f, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x57, 0x72, 0x6f, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72,
	0x72, 0x22, 0x59, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x67, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4e, 0x75, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x0a,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x57, 0x72,
	0x6f, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x57, 0x72, 0x6f, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x45, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x12, 0x2e,
	0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x63, 0x74, 0x72, 0x6c, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xc2,
	0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x3a, 0x0a, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x63, 0x74, 0x72, 0x6c, 0x65,
	0x72, 0x73, 0x76, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x1a,
	0x52, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x63, 0x74, 0x72, 0x6c, 0x65, 0x72, 0x73, 0x76, 0x63,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x32, 0x8f, 0x02, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x72, 0x64, 0x63, 0x74, 0x72,
	0x6c, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x18, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x63, 0x74, 0x72, 0x6c, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x4a, 0x6f, 0x69,
	0x6e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x19, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x63, 0x74, 0x72,
	0x6c, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x40, 0x0a, 0x05, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x63, 0x74, 0x72, 0x6c, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x1a, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x63, 0x74,
	0x72, 0x6c, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x18, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x63, 0x74, 0x72, 0x6c, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x4d, 0x6f,
	0x76, 0x65, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x19, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x63, 0x74,
	0x72, 0x6c, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x19, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x63, 0x74, 0x72, 0x6c, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x1a, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x63,
	0x74, 0x72, 0x6c, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x12, 0x5a, 0x10, 0x2e, 0x3b, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x63, 0x74, 0x72, 0x6c, 0x65, 0x72, 0x73, 0x76, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_internal_idl_shardctlrer_proto_rawDescOnce sync.Once
	file_internal_idl_shardctlrer_proto_rawDescData = file_internal_idl_shardctlrer_proto_rawDesc
)

func file_internal_idl_shardctlrer_proto_rawDescGZIP() []byte {
	file_internal_idl_shardctlrer_proto_rawDescOnce.Do(func() {
		file_internal_idl_shardctlrer_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_idl_shardctlrer_proto_rawDescData)
	})
	return file_internal_idl_shardctlrer_proto_rawDescData
}

var file_internal_idl_shardctlrer_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_internal_idl_shardctlrer_proto_goTypes = []interface{}{
	(*JoinArgs)(nil),   // 0: shardctrlersvc.JoinArgs
	(*Servers)(nil),    // 1: shardctrlersvc.Servers
	(*JoinReply)(nil),  // 2: shardctrlersvc.JoinReply
	(*LeaveArgs)(nil),  // 3: shardctrlersvc.LeaveArgs
	(*LeaveReply)(nil), // 4: shardctrlersvc.LeaveReply
	(*MoveArgs)(nil),   // 5: shardctrlersvc.MoveArgs
	(*MoveReply)(nil),  // 6: shardctrlersvc.MoveReply
	(*QueryArgs)(nil),  // 7: shardctrlersvc.QueryArgs
	(*QueryReply)(nil), // 8: shardctrlersvc.QueryReply
	(*Config)(nil),     // 9: shardctrlersvc.Config
	nil,                // 10: shardctrlersvc.JoinArgs.ServersEntry
	nil,                // 11: shardctrlersvc.Config.GroupsEntry
}
var file_internal_idl_shardctlrer_proto_depIdxs = []int32{
	10, // 0: shardctrlersvc.JoinArgs.Servers:type_name -> shardctrlersvc.JoinArgs.ServersEntry
	9,  // 1: shardctrlersvc.QueryReply.Config:type_name -> shardctrlersvc.Config
	11, // 2: shardctrlersvc.Config.Groups:type_name -> shardctrlersvc.Config.GroupsEntry
	1,  // 3: shardctrlersvc.JoinArgs.ServersEntry.value:type_name -> shardctrlersvc.Servers
	1,  // 4: shardctrlersvc.Config.GroupsEntry.value:type_name -> shardctrlersvc.Servers
	0,  // 5: shardctrlersvc.Shardctrler.Join:input_type -> shardctrlersvc.JoinArgs
	3,  // 6: shardctrlersvc.Shardctrler.Leave:input_type -> shardctrlersvc.LeaveArgs
	5,  // 7: shardctrlersvc.Shardctrler.Move:input_type -> shardctrlersvc.MoveArgs
	7,  // 8: shardctrlersvc.Shardctrler.Query:input_type -> shardctrlersvc.QueryArgs
	2,  // 9: shardctrlersvc.Shardctrler.Join:output_type -> shardctrlersvc.JoinReply
	4,  // 10: shardctrlersvc.Shardctrler.Leave:output_type -> shardctrlersvc.LeaveReply
	6,  // 11: shardctrlersvc.Shardctrler.Move:output_type -> shardctrlersvc.MoveReply
	8,  // 12: shardctrlersvc.Shardctrler.Query:output_type -> shardctrlersvc.QueryReply
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_internal_idl_shardctlrer_proto_init() }
func file_internal_idl_shardctlrer_proto_init() {
	if File_internal_idl_shardctlrer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_idl_shardctlrer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_idl_shardctlrer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Servers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_idl_shardctlrer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_idl_shardctlrer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_idl_shardctlrer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_idl_shardctlrer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_idl_shardctlrer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_idl_shardctlrer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_idl_shardctlrer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_idl_shardctlrer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_idl_shardctlrer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_idl_shardctlrer_proto_goTypes,
		DependencyIndexes: file_internal_idl_shardctlrer_proto_depIdxs,
		MessageInfos:      file_internal_idl_shardctlrer_proto_msgTypes,
	}.Build()
	File_internal_idl_shardctlrer_proto = out.File
	file_internal_idl_shardctlrer_proto_rawDesc = nil
	file_internal_idl_shardctlrer_proto_goTypes = nil
	file_internal_idl_shardctlrer_proto_depIdxs = nil
}
